#!/bin/sh
# -*- coding: utf-8 -*-
# Copyright (C) by the Spot authors, see the AUTHORS file for details.
#
# This file is part of Spot, a model checking library.
#
# Spot is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# Spot is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

. ./defs
set -e

cat >aut.hoa <<'EOF'
HOA: v1
States: 4
properties: implicit-labels trans-labels no-univ-branch deterministic complete
acc-name: Rabin 2
Acceptance: 4 (Fin(0)&Inf(1))|(Fin(2)&Inf(3))
Start: 0
AP: 2 "p0" "p1"
--BODY--
State: 0 {0}
1
0
3
2
State: 1 {1}
1
0
3
2
State: 2 {0 3}
1
0
3
2
State: 3 {1 3}
1
0
3
2
--END--
HOA: v1
name: "Fb & GF((a & Xb) | (!a & X!b))"
States: 5
Start: 0
AP: 2 "b" "a"
acc-name: Rabin 1
Acceptance: 2 Fin(0) & Inf(1)
properties: trans-labels explicit-labels trans-acc complete
properties: deterministic
--BODY--
State: 0
[!0&!1] 0
[0] 1
[!0&1] 2
State: 1
[!1] 3
[1] 4
State: 2
[!0&!1] 0 {0}
[!0&1] 2 {0}
[0&!1] 3
[0&1] 4
State: 3
[!0] 1 {1}
[0&!1] 3
[0&1] 4
State: 4
[0] 1 {1}
[!0&!1] 3
[!0&1] 4
--END--
HOA: v1
name: "X(a & FGb)"
States: 4
Start: 0
AP: 2 "a" "b"
acc-name: Rabin 1
Acceptance: 2 Fin(0) & Inf(1)
properties: trans-labels explicit-labels trans-acc deterministic
--BODY--
State: 0
[t] 1
State: 1
[0&!1] 2
[0&1] 3
State: 2
[!1] 2
[1] 3
State: 3
[!1] 2 {0}
[1] 3 {1}
--END--
EOF

cat >expected << 'EOF'
spot.highlight.states: 0 0 1 0 2 0 3 0
spot.highlight.states: 0 0 1 1 2 0 3 1 4 1
spot.highlight.states: 2 0 3 0
EOF

autfilt aut.hoa --highlight-languages -H1.1 | grep spot.highlight.states >res
diff expected res


cat >input.hoa <<EOF
HOA: v1
name: "Fb & GF((a & Xb) | (!a & X!b))"
States: 5
Start: 0
AP: 2 "b" "a"
acc-name: Rabin 1
Acceptance: 2 Fin(0) & Inf(1)
properties: trans-labels explicit-labels trans-acc complete
properties: deterministic
spot.highlight.states: 0 0 1 1 2 0 3 1 4 1
--BODY--
State: 0
[!0&!1] 0
[0] 1
[!0&1] 2
State: 1
[!1] 3
[1] 4
State: 2
[!0&!1] 0 {0}
[!0&1] 2 {0}
[0&!1] 3
[0&1] 4
State: 3
[!0] 1 {1}
[0&!1] 3
[0&1] 4
State: 4
[0] 1 {1}
[!0&!1] 3
[!0&1] 4
--END--
EOF

cat >input2.hoa <<EOF
HOA: v1
name: "Fb & GF((a & Xb) | (!a & X!b))"
States: 5
Start: 0
AP: 2 "b" "a"
acc-name: Rabin 1
Acceptance: 2 Fin(0) & Inf(1)
properties: trans-labels explicit-labels trans-acc complete
properties: deterministic
spot.highlight.states: 0 0 1 8 2 0 3 8 4 8 /* 8 instead of 1 */
--BODY--
State: 0
[!0&!1] 0
[0] 1
[!0&1] 2
State: 1
[!1] 3
[1] 4
State: 2
[!0&!1] 0 {0}
[!0&1] 2 {0}
[0&!1] 3
[0&1] 4
State: 3
[!0] 1 {1}
[0&!1] 3
[0&1] 4
State: 4
[0] 1 {1}
[!0&!1] 3
[!0&1] 4
--END--
EOF

autfilt --dot input.hoa > output.dot
grep xlabel output.dot && exit 1
grep forcelabels output.dot && exit 1
autfilt --dot input2.hoa > output2.dot
grep xlabel output2.dot
grep forcelabels output2.dot


cat >case5.hoa <<EOF
HOA: v1
name: "case5"
States: 7
Start: 0
AP: 2 "a" "b"
Acceptance: 8
  ((Fin(0)&Inf(1))|(Fin(2)&Inf(3)))&(Fin(4)|Inf(5))&(Fin(6)|Inf(7))
properties: trans-labels explicit-labels trans-acc
--BODY--
State: 0
[0&1] 1 {2}
[0&1] 2 {2}
State: 1
[0&1] 3 {1 5}
State: 2
[0&1] 3 {1}
[0&1] 4 {1}
State: 3
[0&1] 1 {0 2 3 5}
[!0&!1] 5 {5 6}
State: 4
[0&1] 1 {0 2 3}
[0&1] 2 {0 2 3}
[!0&!1] 6 {4 5}
State: 5
[0&1] 3
[0&1] 4
State: 6
[!0&1] 0 {2 3}
[!0&1] 2 {0}
--END--
EOF
autfilt --highlight-accepting-run=2 case5.hoa -H1.1 | grep highlight >out
cat >expect.hoa <<EOF
spot.highlight.edges: 2 2 5 2 10 2 13 2
EOF
diff out expect.hoa


# Issue #548
cat >bug548.hoa <<EOF
HOA: v1
States: 2
Start: 0
AP: 0
Acceptance: 0 t
spot.highlight.edges: 1 1 2 2 3 3 4 4
--BODY--
State: 0
[t] 1
[f] 0
State: 1
[f] 0
[t] 0
--END--
EOF
autfilt bug548.hoa -H1.1 | grep highlight > out.hoa
cat >expect.hoa <<EOF
spot.highlight.edges: 1 1 2 4
EOF
diff out.hoa expect.hoa
