#!/bin/sh
# -*- coding: utf-8 -*-
# Copyright (C) 2011, 2013, 2014, 2016, 2020 Laboratoire de Recherche et
# DÃ©veloppement de l'Epita (LRDE).
#
# This file is part of Spot, a model checking library.
#
# Spot is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# Spot is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


. ./defs

divine compile > output 2>&1

if grep -i 'ltsmin ' output; then
  :
else
  echo "divine not installed, or no ltsmin interface"
  exit 77
fi

set -e
run 0 ../modelcheck --dot=model --model $srcdir/finite.dve \
    --formula '"P.a < 10"' > stdout
test `grep ' -> ' stdout | wc -l` = 25
test `grep 'P.a=' stdout | wc -l` = 15

run 0 ../modelcheck --selfloopize true --dot=model --model $srcdir/finite.dve \
    --formula '"P.a < 10"' > stdout2
cmp stdout stdout2

run 0 ../modelcheck --selfloopize false --dot model --model $srcdir/finite.dve \
    --formula '"P.a < 10"' > stdout
test `grep ' -> ' stdout | wc -l` = 19
test `grep 'P.a=' stdout | wc -l` = 15

# the same with compressed states
run 0 ../modelcheck --compress 1 --selfloopize false \
    --dot model --model $srcdir/finite.dve --formula '"P.a < 10"' > stdout
test `grep ' -> ' stdout | wc -l` = 19
test `grep 'P.a=' stdout | wc -l` = 15

run 0 ../modelcheck --is-empty --selfloopize dead --model $srcdir/finite.dve \
    --formula '!(G(dead -> ("P.a==3" | "P.b==3")))'

run 1 ../modelcheck --is-empty --selfloopize dead --model $srcdir/finite.dve \
    --formula '!(G(dead -> ("P.a==2" | "P.b==3")))'

run 1 ../modelcheck --is-empty --selfloopize dead --model $srcdir/finite.dve \
    --formula  '!(G(dead -> ("P.a==2" | "P.b==3")))' -c -p 1

run 1 ../modelcheck --cndfs --selfloopize dead --model $srcdir/finite.dve \
    --formula  '!(G(dead -> ("P.a==2" | "P.b==3")))' -c -p 1

run 1 ../modelcheck --swarming --selfloopize dead --model $srcdir/finite.dve \
    --formula  '!(G(dead -> ("P.a==2" | "P.b==3")))' -c -p 1

# Test the various combination for atomic propositions
run 1 ../modelcheck --is-empty --selfloopize dead --model $srcdir/finite.dve \
    --formula  '(F("P.b == P.a"))' -c -p 1

run 1 ../modelcheck --is-empty --selfloopize dead --model $srcdir/finite.dve \
    --formula  '(F("P.b < P.a"))' -c -p 1

run 1 ../modelcheck --is-empty --selfloopize dead --model $srcdir/finite.dve \
    --formula  '(F("P.b <= P.a"))' -c -p 1

run 1 ../modelcheck --is-empty --selfloopize dead --model $srcdir/finite.dve \
    --formula  '(F("P.b > P.a"))' -c -p 1

run 0 ../modelcheck --is-empty --selfloopize dead --model $srcdir/finite.dve \
    --formula  '!(F("P.b >= P.a"))' -c -p 1

run 1 ../modelcheck --is-empty --selfloopize dead --model $srcdir/finite.dve \
    --formula  '!(F("P.a>4"))' -c -p 1

run 0 ../modelcheck --is-empty --selfloopize dead --model $srcdir/finite.dve \
    --formula  '(F("5==P.a"))' -c -p 1

run 0 ../modelcheck --is-empty --selfloopize dead --model $srcdir/finite.dve \
    --formula  '(F("5<=P.a"))' -c -p 1

run 0 ../modelcheck --is-empty --selfloopize dead --model $srcdir/finite.dve \
    --formula  '!(F("5>P.a"))' -c -p 1

run 0 ../modelcheck --is-empty --selfloopize dead --model $srcdir/finite.dve \
    --formula  '!(F("5>=P.a"))' -c -p 1

run 0 ../modelcheck --is-empty --selfloopize dead --model $srcdir/finite.dve \
    --formula  '!(F("P.b>=P.a"))' -c -p 1

run 1 ../modelcheck --is-empty --selfloopize dead --model $srcdir/finite.dve \
    --formula  '!(F("P.b>P.a"))' -c -p 1

run 1 ../modelcheck --is-empty --selfloopize dead --model $srcdir/finite.dve \
    --formula  '!(F("P.b<P.a"))' -c -p 1

run 0 ../modelcheck --is-empty --selfloopize dead --model $srcdir/finite.dve \
    --formula  '!(F("P.b<=P.a"))' -c -p 1

run 1 ../modelcheck --model $srcdir/finite.dve \
    --csv --has-deadlock -p 1 -c

# This used to segfault because of a bug in a
# function that do not exist anymore.
run 0 ../modelcheck --dot product --model $srcdir/finite.dve \
    --formula true
