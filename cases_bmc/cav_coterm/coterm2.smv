MODULE main

-- 0	while (x>0){
-- 1		x = x - (2 x y)
-- 2	}

	VAR
		x:-10..100;
		t: 0..1;
		location: 0..2;

	FROZENVAR
		y: 0..5;

	ASSIGN
		init(location) := 1;
		init(x) := 100;
		init(t) := 0;
    init(y) := 2;

		next(location) :=
		case
			((location = 1) & (x > 0)): 1;
      ((location = 1) & (x <= 0)) : 2;
      TRUE: location ;
    esac;

    next(x) :=
		case
			((location = 1) & (x > 0)): (x - (2 * y));
      ((location = 1) & (x <= 0)) : x;
      TRUE : x;
    esac;

    next(t) :=
		case
      (location = 1): 0;
			(location = 2): 1;
      TRUE : t;
    esac;

    DEFINE
			halt := location = 2 ;
