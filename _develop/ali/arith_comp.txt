Arithmatic Comparator

PC (program counter): 0, 1, 2, 3

3 (11): PC_0 /\ PC_1
2 (10): PC_0 /\ ~PC_1
1 (01): ~PC_0 /\ PC_1
0 (00): ~PC_0 /\ ~PC_1

Part 1: assign a number to a variable.
Example: *p1_line[A]=0*
Because p1_line: 0..4, we need 3 bits

0: ~p1_line_0[A] /\ ~p1_line_1[A] /\ ~p1_line_2[A]
1: ~p1_line_0[A] /\ ~p1_line_1[A] /\ p1_line_2[A]
2: ~p1_line_0[A] /\  p1_line_1[A] /\ ~p1_line_2[A]
3: ~p1_line_0[A] /\  p1_line_1[A] /\ p1_line_2[A]
4:  p1_line_0[A] /\  ~p1_line_1[A] /\ ~p1_line_2[A]

*p1_line[A]=0*
should become
(~p1_line_0[A] /\ ~p1_line_1[A] /\ ~p1_line_2[A])

*p1_line[B]=2*
should become
(~p1_line_0[B] /\ p1_line_1[B] /\ p1_line_2[B])


Part 2: assign a variable value to another variable
Example: *p1_line[A]=p1_line[B]*
Because p1_line: 0..4, we need 3 bits

(for [A])
0: ~p1_line_0[A] /\ ~p1_line_1[A] /\ ~p1_line_2[A]
1: ~p1_line_0[A] /\ ~p1_line_1[A] /\ p1_line_2[A]
2: ~p1_line_0[A] /\  p1_line_1[A] /\ ~p1_line_2[A]
3: ~p1_line_0[A] /\  p1_line_1[A] /\ p1_line_2[A]
4:  p1_line_0[A] /\  ~p1_line_1[A] /\ ~p1_line_2[A]

(for [B])
0: ~p1_line_0[B] /\ ~p1_line_1[B] /\ ~p1_line_2[B]
1: ~p1_line_0[B] /\ ~p1_line_1[B] /\ p1_line_2[B]
2: ~p1_line_0[B] /\  p1_line_1[B] /\ ~p1_line_2[B]
3: ~p1_line_0[B] /\  p1_line_1[B] /\ p1_line_2[B]
4:  p1_line_0[B] /\  ~p1_line_1[B] /\ ~p1_line_2[B]


000 001 010 011 100

000 001 010 011 100

*p1_line[A]=p1_line[B]*
becomes
(p1_line_0[A] <-> p1_line_0[B]) /\ (p1_line_1[A] <-> p1_line_1[B]) /\ (p1_line_2[A] <-> p1_line_2[B])

*p1_line[A]!=p1_line[B]*
becomes
~((p1_line_0[A] <-> p1_line_0[B]) /\ (p1_line_1[A] <-> p1_line_1[B]) /\ (p1_line_2[A] <-> p1_line_2[B]))
