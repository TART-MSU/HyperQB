# k = 3


Program inputs: mini_R.bool, k

# from step 0 to step 1
((((PC_1_A[0]/\~PC_0_A[0])/\~a_A[0])) -> (((PC_1_A[1]/\PC_0_A[1])/\~a_A[1])))/\
((((PC_1_A[0]/\PC_0_A[0])/\~a_A[0])) -> ((((PC_1_A[1]/\PC_0_A[1])/\a_A[1])\/((PC_1_A[1]/\PC_0_A[1])/\~a_A[1]))))/\
((((~PC_1_A[0]/\PC_0_A[0])/\~a_A[0])) -> (((PC_1_A[1]/\~PC_0_A[1])/\~a_A[1])))/\
((((PC_1_A[0]/\PC_0_A[0])/\a_A[0])) -> ((((PC_1_A[1]/\PC_0_A[1])/\a_A[1])\/((PC_1_A[1]/\PC_0_A[1])/\~a_A[1]))))/\
TRUE

# from step 1 to step 2
((((PC_1_A[1]/\~PC_0_A[1])/\~a_A[1])) -> (((PC_1_A[2]/\PC_0_A[2])/\~a_A[0])))/\
((((PC_1_A[1]/\PC_0_A[1])/\~a_A[1])) -> ((((PC_1_A[2]/\PC_0_A[2])/\a_A[2])\/((PC_1_A[2]/\PC_0_A[2])/\~a_A[2]))))/\
((((~PC_1_A[1]/\PC_0_A[1])/\~a_A[1])) -> (((PC_1_A[2]/\~PC_0_A[2])/\~a_A[2])))/\
((((PC_1_A[1]/\PC_0_A[1])/\a_A[1])) -> ((((PC_1_A[2]/\PC_0_A[2])/\a_A[2])\/((PC_1_A[2]/\PC_0_A[2])/\~a_A[2]))))/\
TRUE

# from step 2 to step 3
((((PC_1_A[2]/\~PC_0_A[2])/\~a_A[2])) -> (((PC_1_A[3]/\PC_0_A[3])/\~a_A[3])))/\
((((PC_1_A[2]/\PC_0_A[2])/\~a_A[2])) -> ((((PC_1_A[3]/\PC_0_A[3])/\a_A[3])\/((PC_1_A[3]/\PC_0_A[3])/\~a_A[3]))))/\
((((~PC_1_A[2]/\PC_0_A[2])/\~a_A[2])) -> (((PC_1_A[3]/\~PC_0_A[3])/\~a_A[3])))/\
((((PC_1_A[2]/\PC_0_A[2])/\a_A[2])) -> ((((PC_1_A[3]/\PC_0_A[3])/\a_A[3])\/((PC_1_A[3]/\PC_0_A[3])/\~a_A[3]))))/\
TRUE
