-- fun(int x, int n)
--1:  int t;
--2:  if *
--3:      while (x<n)
--4:          x=x+x
--    else
--5:      while (x<n)
--6:          t=x
--7:          x=x+t
--8:  halt

-- need to add a dummy varibe so we can check x
-- fun(int x, int n)
--1:  int t, q=x
--2:  if *
--3:      while (q<n)
--4:          q=q+q
--    else
--5:      while (x<n)
--6:          t=q
--7:          q=q+t
--8:  halt

MODULE main
    VAR
        x: 1..5;
        q: 1..40;
        n: 1..5;
        t: 1..20;
        star: boolean;
        halt: boolean;
        PC: 1..8;

    ASSIGN
        -- Initial Conditions
        init(PC) := 1;
        init(halt) := FALSE;
        init(q) := 1;
        init(t) := 1;
        -- Transition Relations

        next(n) := n; 
        next(x) := x; 

        next(star) :=
            case
                (PC=1): {TRUE, FALSE};
                TRUE: star;
            esac;

        next(PC) :=
            case
                (PC=1): 2;
                (PC=2 & star): 3; --execute first branch if
                (PC=2 & !star): 5; --execute second branch else

                -- first branch
                (PC=3) & (q<n): 4; -- execute loop
                (PC=3) & !(q<n): 8; -- go to halt if loop is done
                (PC=4): 3; --recheck loop condition 

                -- second branch
                (PC=5) & (q<n): 6; -- execute loop
                (PC=5) & !(q<n): 8; -- go to halt if loop is done
                (PC=6): 7;
                (PC=7) & (q<n): 5; --recheck loop condition
                (PC=7) & !(q<n): 8; 

                (PC=8): 8; --halt state loop here
                TRUE: PC;
            esac;
        
        next(halt) :=
            case
                (PC=8): TRUE;
                TRUE: halt;
            esac;

        next(t) :=
            case
                (PC=6) & (q<n): q;
                TRUE: t;
            esac;

        
        next(q) :=
            case
                (PC=1): x;
                (PC=4) & (q<n): q+q;
                (PC=7) & (q<n): q+t;
                TRUE: q;
            esac;
    
        