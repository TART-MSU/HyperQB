--[program]
--void main(int x, int n, int o) {
-- 1   int c;
-- 2   observe;
-- 3   if * {
-- 4       c = 0;
-- 5       while (x < n) {
-- 6           x = x + 1;
-- 7           c = c + o;
-- 8       }
-- 9   } else {
-- 10       c = 0;
-- 11       while (x < n) {
-- 12           x = x + 1;
-- 13           c = c + o;
-- 14       }
-- 15   }
-- 16   observe;
-- 17 }

-- Final result UNSAT

MODULE main
    VAR
        x: 0..5;
        n: 0..5;
        o: 0..5;
        c: 0..70;
        PC: 1..17;
        star: boolean;
        observe: boolean;

    ASSIGN
        -- init to 1 for now
        init(c):= 1;
        init(PC) := 1;
        -- init(star):= FALSE;
        init(observe):= FALSE;

        next(o):= o; -- frozen var
        next(n):= n; -- frozen var
        
        next(star):= FALSE; -- frozen var

        next(x) := 
            case
                (PC=1): x; -- user input
                (PC=6 | PC=12 & (x >= 5)): x;
                (PC=6 | PC=12 & (x < 4)): x + 1;
                TRUE: x;
            esac;

        next(c) :=
            case
                (PC=4 | PC=10): 0; -- set to zero
                (PC=7 | PC=13 & (c >= 70)): c;
                (PC=7 | PC=13 & (c < 65)): c + o;
                TRUE: c;
            esac;
        
        next(PC) := 
            case
                -- FIRST IF-WHILE
                -- Going into first if statement
                (PC=3 & (star = TRUE)): 4;

                -- Not going into first if statement go into esle
                (PC=3 & (star = FALSE)): 9;

                -- Going into first while loop
                (PC=5 & (x < n)): 6;
                -- Re looping through while loop
                (PC=8): 5;

                -- Not re looping bc x >= n
                (PC=5 & (x >= n)): 16; -- fall to end of program

                -- ELSE-WHILE
                -- Going into second while loop
                (PC=11 & (x < n)): 12;
                (PC=14): 11; -- go back up to beginning of while loop

                (PC=11 & (x >= n)): 16; -- exit while


                -- Skip the else after first if
                (PC=9 & star=TRUE): 16;
                (PC=9 & star=FALSE): 16;

                (PC=17): 17;
                TRUE: PC+1;
            esac;

        next(observe) :=
            case
                (PC=2): TRUE;
                (PC=3): FALSE;
                (PC=16): TRUE;
                (PC=17): FALSE;
                TRUE: observe;
            esac;